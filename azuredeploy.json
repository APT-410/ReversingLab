{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "15106824526829722172"
    }
  },
  "parameters": {
    "clientIp": {
      "type": "string",
      "metadata": {
        "description": "Your public IP in CIDR format, e.g. 203.0.113.10/32"
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Linux admin username"
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Linux admin password"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Windows admin username"
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Windows admin password"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region (e.g. eastus)"
      }
    },
    "spotMaxPrice": {
      "type": "int",
      "defaultValue": -1,
      "metadata": {
        "description": "Maximum spot price in USD/hour (-1 = current market rate)"
      }
    }
  },
  "variables": {
    "prefix": "cape",
    "vnetName": "[format('{0}-vnet', variables('prefix'))]",
    "nsgName": "[format('{0}-nsg', variables('prefix'))]",
    "linuxPipName": "[format('{0}-linux-pip', variables('prefix'))]",
    "winPipName": "[format('{0}-win-pip', variables('prefix'))]",
    "linuxNicName": "[format('{0}-linux-nic', variables('prefix'))]",
    "winNicName": "[format('{0}-win-nic', variables('prefix'))]",
    "linuxVmName": "[format('{0}-linux', variables('prefix'))]",
    "winVmName": "[format('{0}-win', variables('prefix'))]",
    "dataDiskName": "[format('{0}-datadisk', variables('prefix'))]",
    "laName": "[format('{0}-law', variables('prefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('laName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "PerGB2018"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.11.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "sandbox",
            "properties": {
              "addressPrefix": "10.11.1.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-SSH",
            "properties": {
              "priority": 1000,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "Tcp",
              "sourceAddressPrefix": "[parameters('clientIp')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "Allow-RDP",
            "properties": {
              "priority": 1010,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "Tcp",
              "sourceAddressPrefix": "[parameters('clientIp')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('linuxPipName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('winPipName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[variables('linuxNicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '2020-11-01').subnets[0].id]"
              },
              "privateIPAddressVersion": "IPv4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('linuxPipName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('linuxPipName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[variables('winNicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '2020-11-01').subnets[0].id]"
              },
              "privateIPAddressVersion": "IPv4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('winPipName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('winPipName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2022-03-02",
      "name": "[variables('dataDiskName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium_LRS"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 512
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2023-08-01",
      "name": "pickSkuScript",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "properties": {
        "azCliVersion": "2.20.0",
        "scriptContent": "SKU=$(az vm list-skus --location [parameters('location')] --resource-type virtualMachines --size Standard_D* --all --query '[?restrictions==null].name | [0]' -o tsv); jq -n --arg sku '$SKU' '{\"selectedSku\":$sku}' > $AZ_SCRIPTS_OUTPUT_PATH",
        "cleanupPreference": "OnSuccess",
        "timeout": "PT10M",
        "retentionInterval": "PT1H",
        "storageAccountSettings": {
          "storageAccountName": "[toLower(concat('st', uniqueString(resourceGroup().id)))]",
          "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(concat('st', uniqueString(resourceGroup().id)))), '2021-04-01').keys[0].value]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "[variables('linuxVmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "priority": "Spot",
        "evictionPolicy": "Deallocate",
        "billingProfile": {
          "maxPrice": "[parameters('spotMaxPrice')]"
        },
        "hardwareProfile": {
          "vmSize": "[reference(resourceId('Microsoft.Resources/deploymentScripts','pickSkuScript')).outputs.selectedSku]"
        },
        "osProfile": {
          "computerName": "[variables('linuxVmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "adminPassword": "[parameters('linuxAdminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "lun": 1,
              "name": "[variables('dataDiskName')]",
              "createOption": "Attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]"
              }
            }
          ],
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('linuxNicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('linuxNicName'))]",
        "[resourceId('Microsoft.Resources/deploymentScripts','pickSkuScript')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}', variables('linuxVmName'), 'init-tools')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://remnux.org/get-remnux.sh",
            "https://raw.githubusercontent.com/kevoreilly/CAPEv2/master/install.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "bash get-remnux.sh -y && sudo bash install.sh"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('linuxVmName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "[variables('winVmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "priority": "Spot",
        "evictionPolicy": "Deallocate",
        "billingProfile": {
          "maxPrice": "[parameters('spotMaxPrice')]"
        },
        "hardwareProfile": {
          "vmSize": "[reference(resourceId('Microsoft.Resources/deploymentScripts','pickSkuScript')).outputs.selectedSku]"
        },
        "osProfile": {
          "computerName": "[variables('winVmName')]",
          "adminUsername": "[parameters('windowsAdminUsername')]",
          "adminPassword": "[parameters('windowsAdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "RS3-Pro",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('winNicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('winNicName'))]",
        "[resourceId('Microsoft.Resources/deploymentScripts','pickSkuScript')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}', variables('winVmName'), 'init-flare')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/fireeye/flare-vm/master/install.ps1"
          ],
          "commandToExecute": "powershell -ExecutionPolicy Bypass -File install.ps1 -AcceptEula -AddWindowsOptionalFeatures"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('winVmName'))]"
      ]
    }
  ],
  "outputs": {
    "linuxPublicIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('linuxPipName')), '2020-11-01').ipAddress]"
    },
    "windowsPublicIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('winPipName')), '2020-11-01').ipAddress]"
    }
  }
}